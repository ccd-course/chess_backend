memberSearchIndex = [{"p":"com.chess.backend","c":"BackendApplication","l":"BackendApplication()","u":"%3Cinit%3E()"},{"p":"com.chess.backend.gamemodel","c":"Position.Direction","l":"BACKWARD"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveBackward","l":"backward(Chessboard, Piece, boolean, boolean, boolean, int)","u":"backward(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Piece,boolean,boolean,boolean,int)"},{"p":"com.chess.backend.gamemodel","c":"Position","l":"backward(IBoard)","u":"backward(com.chess.backend.domain.models.IBoard)"},{"p":"com.chess.backend.gamemodel.constants","c":"PieceType","l":"BISHOP"},{"p":"com.chess.backend.gamemodel.constants","c":"Color","l":"BLACK"},{"p":"com.chess.backend.gamemodel.constants","c":"Color","l":"BLUE"},{"p":"com.chess.backend.gamemodel.constants","c":"PieceType","l":"CANNON"},{"p":"com.chess.backend.gamemodel.constants","c":"Event","l":"CHECKMATED"},{"p":"com.chess.backend.gamemodel","c":"Chessboard","l":"Chessboard()","u":"%3Cinit%3E()"},{"p":"com.chess.backend.restController.objects","c":"ChessboardObject","l":"ChessboardObject(SquareObject[][])","u":"%3Cinit%3E(com.chess.backend.restController.objects.SquareObject[][])"},{"p":"com.chess.backend.services","c":"ChessboardService","l":"ChessboardService()","u":"%3Cinit%3E()"},{"p":"com.chess.backend.gamemodel","c":"ChessGame","l":"ChessGame()","u":"%3Cinit%3E()"},{"p":"com.chess.backend.services","c":"ChessGameService","l":"ChessGameService(IGameRepository)","u":"%3Cinit%3E(com.chess.backend.domain.repository.IGameRepository)"},{"p":"com.chess.backend.gamemodel","c":"Chessboard","l":"clone()"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveBackward","l":"concretise(Chessboard, Piece, boolean, boolean, boolean)","u":"concretise(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Piece,boolean,boolean,boolean)"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveDiagonal","l":"concretise(Chessboard, Piece, boolean, boolean, boolean)","u":"concretise(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Piece,boolean,boolean,boolean)"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveForward","l":"concretise(Chessboard, Piece, boolean, boolean, boolean)","u":"concretise(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Piece,boolean,boolean,boolean)"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveKnight","l":"concretise(Chessboard, Piece, boolean, boolean, boolean)","u":"concretise(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Piece,boolean,boolean,boolean)"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveLeft","l":"concretise(Chessboard, Piece, boolean, boolean, boolean)","u":"concretise(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Piece,boolean,boolean,boolean)"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveOneBackward","l":"concretise(Chessboard, Piece, boolean, boolean, boolean)","u":"concretise(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Piece,boolean,boolean,boolean)"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveOneDiagonal","l":"concretise(Chessboard, Piece, boolean, boolean, boolean)","u":"concretise(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Piece,boolean,boolean,boolean)"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveOneForward","l":"concretise(Chessboard, Piece, boolean, boolean, boolean)","u":"concretise(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Piece,boolean,boolean,boolean)"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveOneLeft","l":"concretise(Chessboard, Piece, boolean, boolean, boolean)","u":"concretise(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Piece,boolean,boolean,boolean)"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveOneRight","l":"concretise(Chessboard, Piece, boolean, boolean, boolean)","u":"concretise(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Piece,boolean,boolean,boolean)"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MovePawnCaptureBackward","l":"concretise(Chessboard, Piece, boolean, boolean, boolean)","u":"concretise(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Piece,boolean,boolean,boolean)"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MovePawnCaptureForward","l":"concretise(Chessboard, Piece, boolean, boolean, boolean)","u":"concretise(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Piece,boolean,boolean,boolean)"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveRight","l":"concretise(Chessboard, Piece, boolean, boolean, boolean)","u":"concretise(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Piece,boolean,boolean,boolean)"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveTwoBackward","l":"concretise(Chessboard, Piece, boolean, boolean, boolean)","u":"concretise(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Piece,boolean,boolean,boolean)"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveTwoForward","l":"concretise(Chessboard, Piece, boolean, boolean, boolean)","u":"concretise(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Piece,boolean,boolean,boolean)"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"Shoot","l":"concretise(Chessboard, Piece, boolean, boolean, boolean)","u":"concretise(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Piece,boolean,boolean,boolean)"},{"p":"com.chess.backend.domain.repository","c":"IGameRepository","l":"createNewGame(Integer, ChessGame)","u":"createNewGame(java.lang.Integer,com.chess.backend.gamemodel.ChessGame)"},{"p":"com.chess.backend.repository","c":"GameRepository","l":"createNewGame(Integer, ChessGame)","u":"createNewGame(java.lang.Integer,com.chess.backend.gamemodel.ChessGame)"},{"p":"com.chess.backend.repository","c":"GameRepositoryMock","l":"createNewGame(Integer, ChessGame)","u":"createNewGame(java.lang.Integer,com.chess.backend.gamemodel.ChessGame)"},{"p":"com.chess.backend.domain.repository","c":"IGameRepository","l":"createNewGame(Integer, ChessGame, List<EventObject>)","u":"createNewGame(java.lang.Integer,com.chess.backend.gamemodel.ChessGame,java.util.List)"},{"p":"com.chess.backend.repository","c":"GameRepository","l":"createNewGame(Integer, ChessGame, List<EventObject>)","u":"createNewGame(java.lang.Integer,com.chess.backend.gamemodel.ChessGame,java.util.List)"},{"p":"com.chess.backend.repository","c":"GameRepositoryMock","l":"createNewGame(Integer, ChessGame, List<EventObject>)","u":"createNewGame(java.lang.Integer,com.chess.backend.gamemodel.ChessGame,java.util.List)"},{"p":"com.chess.backend.restController.controller","c":"NewGameController","l":"createNewGame(NewGameObject)","u":"createNewGame(com.chess.backend.restController.objects.NewGameObject)"},{"p":"com.chess.backend.services","c":"ChessGameService","l":"createNewGame(String[])","u":"createNewGame(java.lang.String[])"},{"p":"com.chess.backend.gamemodel","c":"Position","l":"diagBL(IBoard)","u":"diagBL(com.chess.backend.domain.models.IBoard)"},{"p":"com.chess.backend.gamemodel","c":"Position","l":"diagBR(IBoard)","u":"diagBR(com.chess.backend.domain.models.IBoard)"},{"p":"com.chess.backend.gamemodel","c":"Position","l":"diagFL(IBoard)","u":"diagFL(com.chess.backend.domain.models.IBoard)"},{"p":"com.chess.backend.gamemodel","c":"Position","l":"diagFR(IBoard)","u":"diagFR(com.chess.backend.domain.models.IBoard)"},{"p":"com.chess.backend.gamemodel","c":"Position.Direction","l":"DIAGONAL_BL"},{"p":"com.chess.backend.gamemodel","c":"Position.Direction","l":"DIAGONAL_BR"},{"p":"com.chess.backend.gamemodel","c":"Position.Direction","l":"DIAGONAL_FL"},{"p":"com.chess.backend.gamemodel","c":"Position.Direction","l":"DIAGONAL_FR"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveDiagonal","l":"diagonal(Chessboard, Piece, boolean, boolean, boolean, int)","u":"diagonal(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Piece,boolean,boolean,boolean,int)"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveDiagonal","l":"diagonal(Chessboard, Piece, boolean, boolean, boolean, int, Position.Direction)","u":"diagonal(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Piece,boolean,boolean,boolean,int,com.chess.backend.gamemodel.Position.Direction)"},{"p":"com.chess.backend.gamemodel.constants","c":"Event","l":"DRAW"},{"p":"com.chess.backend.restController.controller","c":"EndGameController","l":"endGame(int)"},{"p":"com.chess.backend.restController.service","c":"EndGameService","l":"endGame(int)"},{"p":"com.chess.backend.restController.controller","c":"EndGameController","l":"EndGameController(EndGameService)","u":"%3Cinit%3E(com.chess.backend.restController.service.EndGameService)"},{"p":"com.chess.backend.restController.service","c":"EndGameService","l":"EndGameService(ChessGameService)","u":"%3Cinit%3E(com.chess.backend.services.ChessGameService)"},{"p":"com.chess.backend.domain.models","c":"IBoard","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.chess.backend.gamemodel","c":"Move","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.chess.backend.gamemodel","c":"Position","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.chess.backend.repository.metadata","c":"EventMetadata","l":"EventMetadata(int, String)","u":"%3Cinit%3E(int,java.lang.String)"},{"p":"com.chess.backend.repository.metadata","c":"EventMetadata","l":"EventMetadata(int[], int[], int, String)","u":"%3Cinit%3E(int[],int[],int,java.lang.String)"},{"p":"com.chess.backend.repository.metadata","c":"EventMetadata","l":"EventMetadata(int[], int[], int, String, boolean)","u":"%3Cinit%3E(int[],int[],int,java.lang.String,boolean)"},{"p":"com.chess.backend.repository.metadata","c":"EventObject","l":"EventObject()","u":"%3Cinit%3E()"},{"p":"com.chess.backend.repository.metadata","c":"EventObject","l":"EventObject(Event)","u":"%3Cinit%3E(com.chess.backend.gamemodel.constants.Event)"},{"p":"com.chess.backend.repository.metadata","c":"EventObject","l":"EventObject(Event, EventMetadata)","u":"%3Cinit%3E(com.chess.backend.gamemodel.constants.Event,com.chess.backend.repository.metadata.EventMetadata)"},{"p":"com.chess.backend.restController.controller","c":"ExecutedMoveController","l":"executedMove(ExecutedMoveObject)","u":"executedMove(com.chess.backend.restController.objects.ExecutedMoveObject)"},{"p":"com.chess.backend.restController.service","c":"ExecutedMoveService","l":"executedMove(ExecutedMoveObject)","u":"executedMove(com.chess.backend.restController.objects.ExecutedMoveObject)"},{"p":"com.chess.backend.services","c":"ChessGameService","l":"executedMove(int, int[], int[])","u":"executedMove(int,int[],int[])"},{"p":"com.chess.backend.restController.controller","c":"ExecutedMoveController","l":"ExecutedMoveController(ExecutedMoveService)","u":"%3Cinit%3E(com.chess.backend.restController.service.ExecutedMoveService)"},{"p":"com.chess.backend.restController.objects","c":"ExecutedMoveObject","l":"ExecutedMoveObject(int, int[], int[])","u":"%3Cinit%3E(int,int[],int[])"},{"p":"com.chess.backend.restController.service","c":"ExecutedMoveService","l":"ExecutedMoveService(ChessGameService)","u":"%3Cinit%3E(com.chess.backend.services.ChessGameService)"},{"p":"com.chess.backend.gamemodel.constants","c":"PieceType","l":"FERZ"},{"p":"com.chess.backend.repository","c":"Firebase","l":"Firebase(FirebaseConnector)","u":"%3Cinit%3E(com.chess.backend.repository.FirebaseConnector)"},{"p":"com.chess.backend.repository","c":"FirebaseConnector","l":"FirebaseConnector()","u":"%3Cinit%3E()"},{"p":"com.chess.backend.gamemodel","c":"Position.Direction","l":"FORWARD"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveForward","l":"forward(Chessboard, Piece, boolean, boolean, boolean, int)","u":"forward(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Piece,boolean,boolean,boolean,int)"},{"p":"com.chess.backend.gamemodel","c":"Position","l":"forward(IBoard)","u":"forward(com.chess.backend.domain.models.IBoard)"},{"p":"com.chess.backend.gamemodel.constants","c":"Event","l":"GAME_STARTED"},{"p":"com.chess.backend.repository","c":"GameRepository","l":"GameRepository()","u":"%3Cinit%3E()"},{"p":"com.chess.backend.repository","c":"GameRepositoryMock","l":"GameRepositoryMock()","u":"%3Cinit%3E()"},{"p":"com.chess.backend.domain.models","c":"IGame","l":"getActivePlayer()"},{"p":"com.chess.backend.services","c":"ChessGameService","l":"getActivePlayerName(ChessGame)","u":"getActivePlayerName(com.chess.backend.gamemodel.ChessGame)"},{"p":"com.chess.backend.gamemodel","c":"Piece","l":"getAllowedFullMoves(Chessboard)","u":"getAllowedFullMoves(com.chess.backend.gamemodel.Chessboard)"},{"p":"com.chess.backend.gamemodel","c":"Piece","l":"getAllowedMoves(Chessboard)","u":"getAllowedMoves(com.chess.backend.gamemodel.Chessboard)"},{"p":"com.chess.backend.domain.controllers.objects","c":"INewPlayersObject","l":"getAllPlayerNames()"},{"p":"com.chess.backend.restController.objects","c":"NewPlayersObject","l":"getAllPlayerNames()"},{"p":"com.chess.backend.services","c":"ChessGameService","l":"getAllSquaresFromChessboard(ChessGame)","u":"getAllSquaresFromChessboard(com.chess.backend.gamemodel.ChessGame)"},{"p":"com.chess.backend.services","c":"PlayerService","l":"getBaseY(Player)","u":"getBaseY(com.chess.backend.gamemodel.Player)"},{"p":"com.chess.backend.services","c":"ChessGameService","l":"getBoard(int)"},{"p":"com.chess.backend.services","c":"ChessboardService","l":"getBottom(ArrayList<ArrayList<Square>>)","u":"getBottom(java.util.ArrayList)"},{"p":"com.chess.backend.services","c":"ChessboardService","l":"getCaptureKingPlayers(Chessboard, Player)","u":"getCaptureKingPlayers(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Player)"},{"p":"com.chess.backend.domain.models","c":"IGame","l":"getChessboard()"},{"p":"com.chess.backend.restController.controller","c":"GetChessboardController","l":"getChessboard(int)"},{"p":"com.chess.backend.restController.service","c":"GetChessboardService","l":"getChessboard(int)"},{"p":"com.chess.backend.restController.controller","c":"GetChessboardController","l":"GetChessboardController(GetChessboardService)","u":"%3Cinit%3E(com.chess.backend.restController.service.GetChessboardService)"},{"p":"com.chess.backend.restController.service","c":"GetChessboardService","l":"GetChessboardService(ChessGameService)","u":"%3Cinit%3E(com.chess.backend.services.ChessGameService)"},{"p":"com.chess.backend.gamemodel","c":"Piece","l":"getColor()"},{"p":"com.chess.backend.gamemodel","c":"Move","l":"getFromPos()"},{"p":"com.chess.backend.domain.repository","c":"IGameRepository","l":"getGame(Integer)","u":"getGame(java.lang.Integer)"},{"p":"com.chess.backend.repository","c":"GameRepository","l":"getGame(Integer)","u":"getGame(java.lang.Integer)"},{"p":"com.chess.backend.repository","c":"GameRepositoryMock","l":"getGame(Integer)","u":"getGame(java.lang.Integer)"},{"p":"com.chess.backend.services","c":"ChessGameService","l":"getGame(Integer)","u":"getGame(java.lang.Integer)"},{"p":"com.chess.backend.restController.objects","c":"ExecutedMoveObject","l":"getGameID()"},{"p":"com.chess.backend.restController.objects","c":"MoveRequestInputObject","l":"getGameID()"},{"p":"com.chess.backend.domain.models","c":"IGame","l":"getId()"},{"p":"com.chess.backend.gamemodel.constants","c":"Color","l":"getLabel()"},{"p":"com.chess.backend.gamemodel.constants","c":"Event","l":"getLabel()"},{"p":"com.chess.backend.gamemodel.constants","c":"PieceType","l":"getLabel()"},{"p":"com.chess.backend.services","c":"ChessboardService","l":"getMaxX(ArrayList<ArrayList<Square>>)","u":"getMaxX(java.util.ArrayList)"},{"p":"com.chess.backend.services","c":"ChessboardService","l":"getMaxY(ArrayList<ArrayList<Square>>)","u":"getMaxY(java.util.ArrayList)"},{"p":"com.chess.backend.domain.models","c":"IBoard","l":"getMoves_history()"},{"p":"com.chess.backend.domain.models","c":"IGame","l":"getMoves()"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"Shoot","l":"getNeighborPos(Chessboard, Position, Player)","u":"getNeighborPos(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Position,com.chess.backend.gamemodel.Player)"},{"p":"com.chess.backend.services","c":"ChessGameService","l":"getNewGameID()"},{"p":"com.chess.backend.domain.services","c":"INewGameService","l":"getNewGameID(NewGameObject)","u":"getNewGameID(com.chess.backend.restController.objects.NewGameObject)"},{"p":"com.chess.backend.restController.service","c":"NewChessGameService","l":"getNewGameID(NewGameObject)","u":"getNewGameID(com.chess.backend.restController.objects.NewGameObject)"},{"p":"com.chess.backend.restController.service","c":"NewOnlineGameService","l":"getNewGameID(NewGameObject)","u":"getNewGameID(com.chess.backend.restController.objects.NewGameObject)"},{"p":"com.chess.backend.restController.objects","c":"ExecutedMoveObject","l":"getNewPiecePosition()"},{"p":"com.chess.backend.domain.models","c":"IBoard","l":"getNumberOfPlayers()"},{"p":"com.chess.backend.services","c":"ChessboardService","l":"getOccupiedSquares(ArrayList<ArrayList<Square>>)","u":"getOccupiedSquares(java.util.ArrayList)"},{"p":"com.chess.backend.services","c":"ChessboardService","l":"getPieceByPosition(Chessboard, int, int)","u":"getPieceByPosition(com.chess.backend.gamemodel.Chessboard,int,int)"},{"p":"com.chess.backend.services","c":"ChessboardService","l":"getPieceByPosition(Chessboard, Position)","u":"getPieceByPosition(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Position)"},{"p":"com.chess.backend.restController.objects","c":"MoveRequestInputObject","l":"getPiecePosition()"},{"p":"com.chess.backend.gamemodel","c":"Square","l":"getPieceTypeOfPiece()"},{"p":"com.chess.backend.domain.controllers.objects","c":"INewPlayerObject","l":"getPlayerName()"},{"p":"com.chess.backend.domain.controllers.objects","c":"INewPlayersObject","l":"getPlayers()"},{"p":"com.chess.backend.domain.models","c":"IGame","l":"getPlayers()"},{"p":"com.chess.backend.restController.controller","c":"GetPlayerTurnController","l":"getPlayerTurn(int)"},{"p":"com.chess.backend.restController.service","c":"GetPlayerTurnService","l":"getPlayerTurn(int)"},{"p":"com.chess.backend.services","c":"ChessGameService","l":"getPlayerTurn(int)"},{"p":"com.chess.backend.restController.controller","c":"GetPlayerTurnController","l":"GetPlayerTurnController(GetPlayerTurnService)","u":"%3Cinit%3E(com.chess.backend.restController.service.GetPlayerTurnService)"},{"p":"com.chess.backend.restController.objects","c":"GetPlayerTurnObject","l":"GetPlayerTurnObject(int, String)","u":"%3Cinit%3E(int,java.lang.String)"},{"p":"com.chess.backend.restController.service","c":"GetPlayerTurnService","l":"GetPlayerTurnService(ChessGameService)","u":"%3Cinit%3E(com.chess.backend.services.ChessGameService)"},{"p":"com.chess.backend.gamemodel","c":"Square","l":"getPos()"},{"p":"com.chess.backend.gamemodel","c":"Position","l":"getPosFromDir(IBoard, Position.Direction)","u":"getPosFromDir(com.chess.backend.domain.models.IBoard,com.chess.backend.gamemodel.Position.Direction)"},{"p":"com.chess.backend.gamemodel.constants","c":"Color","l":"getPosition()"},{"p":"com.chess.backend.gamemodel","c":"Piece","l":"getPosition()"},{"p":"com.chess.backend.restController.objects","c":"MoveRequestOutputObject","l":"getPossibleMoves()"},{"p":"com.chess.backend.services","c":"ChessGameService","l":"getPossibleMoves(ChessGame, int[])","u":"getPossibleMoves(com.chess.backend.gamemodel.ChessGame,int[])"},{"p":"com.chess.backend.restController.controller","c":"MoveRequestController","l":"getPossibleMoves(MoveRequestInputObject)","u":"getPossibleMoves(com.chess.backend.restController.objects.MoveRequestInputObject)"},{"p":"com.chess.backend.restController.service","c":"MoveRequestService","l":"getPossibleMoves(MoveRequestInputObject)","u":"getPossibleMoves(com.chess.backend.restController.objects.MoveRequestInputObject)"},{"p":"com.chess.backend.gamemodel","c":"Square","l":"getPosX()"},{"p":"com.chess.backend.gamemodel","c":"Square","l":"getPosY()"},{"p":"com.chess.backend.restController.objects","c":"ExecutedMoveObject","l":"getPreviousPiecePosition()"},{"p":"com.chess.backend.services","c":"ChessboardService","l":"getSquare(Chessboard, Position)","u":"getSquare(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Position)"},{"p":"com.chess.backend.domain.models","c":"IBoard","l":"getSquares()"},{"p":"com.chess.backend.gamemodel.constants","c":"PieceType","l":"getSymbol()"},{"p":"com.chess.backend.gamemodel","c":"Piece","l":"getSymbol()"},{"p":"com.chess.backend.gamemodel","c":"Move","l":"getTakenPos()"},{"p":"com.chess.backend.services","c":"ChessboardService","l":"getTop(ArrayList<ArrayList<Square>>)","u":"getTop(java.util.ArrayList)"},{"p":"com.chess.backend.gamemodel","c":"Move","l":"getToPos()"},{"p":"com.chess.backend.services","c":"ChessboardService","l":"getValidMovesForPiece(Chessboard, Piece, Player)","u":"getValidMovesForPiece(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Piece,com.chess.backend.gamemodel.Player)"},{"p":"com.chess.backend.domain.models","c":"IBoard","l":"hashCode()"},{"p":"com.chess.backend.gamemodel","c":"Move","l":"hashCode()"},{"p":"com.chess.backend.gamemodel","c":"Position","l":"hashCode()"},{"p":"com.chess.backend.gamemodel","c":"Square","l":"hasPiece()"},{"p":"com.chess.backend.services","c":"ChessboardService","l":"hasPlayerValidMoves(Chessboard, Player)","u":"hasPlayerValidMoves(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Player)"},{"p":"com.chess.backend.services","c":"ChessboardService","l":"initClean(ArrayList<ArrayList<Square>>)","u":"initClean(java.util.ArrayList)"},{"p":"com.chess.backend.services","c":"ChessboardService","l":"initClean(Chessboard)","u":"initClean(com.chess.backend.gamemodel.Chessboard)"},{"p":"com.chess.backend.services","c":"ChessboardService","l":"initNewGameBoard(List<Player>)","u":"initNewGameBoard(java.util.List)"},{"p":"com.chess.backend.services","c":"PlayerService","l":"initPlayers(String[])","u":"initPlayers(java.lang.String[])"},{"p":"com.chess.backend.domain.models","c":"IBoard","l":"isBreakCastling()"},{"p":"com.chess.backend.services","c":"ChessboardService","l":"isCheck(Chessboard, Player)","u":"isCheck(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Player)"},{"p":"com.chess.backend.restController.controller","c":"JoinOnlineGameController","l":"joinOnlineGame(JoinOnlineGameObject)","u":"joinOnlineGame(com.chess.backend.restController.objects.JoinOnlineGameObject)"},{"p":"com.chess.backend.restController.controller","c":"JoinOnlineGameController","l":"JoinOnlineGameController(ChessGameService, GameRepository)","u":"%3Cinit%3E(com.chess.backend.services.ChessGameService,com.chess.backend.repository.GameRepository)"},{"p":"com.chess.backend.restController.objects","c":"JoinOnlineGameObject","l":"JoinOnlineGameObject()","u":"%3Cinit%3E()"},{"p":"com.chess.backend.gamemodel.constants","c":"PieceType","l":"KING"},{"p":"com.chess.backend.gamemodel.constants","c":"PieceType","l":"KNIGHT"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveKnight","l":"knight(Chessboard, Piece, boolean, boolean, boolean, int, Position.Direction, Position.Direction)","u":"knight(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Piece,boolean,boolean,boolean,int,com.chess.backend.gamemodel.Position.Direction,com.chess.backend.gamemodel.Position.Direction)"},{"p":"com.chess.backend.gamemodel","c":"Position.Direction","l":"LEFT"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveLeft","l":"left(Chessboard, Piece, boolean, boolean, boolean, int)","u":"left(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Piece,boolean,boolean,boolean,int)"},{"p":"com.chess.backend.gamemodel","c":"Position","l":"left(IBoard)","u":"left(com.chess.backend.domain.models.IBoard)"},{"p":"com.chess.backend.gamemodel.constants","c":"Castling","l":"LONG_CASTLING"},{"p":"com.chess.backend","c":"BackendApplication","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"com.chess.backend.services","c":"ChessboardService","l":"move(Chessboard, int, int, int, int)","u":"move(com.chess.backend.gamemodel.Chessboard,int,int,int,int)"},{"p":"com.chess.backend.gamemodel","c":"Move","l":"Move(Square, Square, Square, Piece, Piece, Castling, boolean, Piece)","u":"%3Cinit%3E(com.chess.backend.gamemodel.Square,com.chess.backend.gamemodel.Square,com.chess.backend.gamemodel.Square,com.chess.backend.gamemodel.Piece,com.chess.backend.gamemodel.Piece,com.chess.backend.gamemodel.constants.Castling,boolean,com.chess.backend.gamemodel.Piece)"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveBackward","l":"MoveBackward()","u":"%3Cinit%3E()"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveDiagonal","l":"MoveDiagonal()","u":"%3Cinit%3E()"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveForward","l":"MoveForward()","u":"%3Cinit%3E()"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveKnight","l":"MoveKnight()","u":"%3Cinit%3E()"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveLeft","l":"MoveLeft()","u":"%3Cinit%3E()"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveOneBackward","l":"MoveOneBackward()","u":"%3Cinit%3E()"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveOneDiagonal","l":"MoveOneDiagonal()","u":"%3Cinit%3E()"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveOneForward","l":"MoveOneForward()","u":"%3Cinit%3E()"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveOneLeft","l":"MoveOneLeft()","u":"%3Cinit%3E()"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveOneRight","l":"MoveOneRight()","u":"%3Cinit%3E()"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MovePawnCaptureBackward","l":"MovePawnCaptureBackward()","u":"%3Cinit%3E()"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MovePawnCaptureForward","l":"MovePawnCaptureForward()","u":"%3Cinit%3E()"},{"p":"com.chess.backend.restController.controller","c":"MoveRequestController","l":"MoveRequestController(MoveRequestService)","u":"%3Cinit%3E(com.chess.backend.restController.service.MoveRequestService)"},{"p":"com.chess.backend.restController.objects","c":"MoveRequestInputObject","l":"MoveRequestInputObject(int, int[])","u":"%3Cinit%3E(int,int[])"},{"p":"com.chess.backend.restController.objects","c":"MoveRequestOutputObject","l":"MoveRequestOutputObject(int[][])","u":"%3Cinit%3E(int[][])"},{"p":"com.chess.backend.restController.service","c":"MoveRequestService","l":"MoveRequestService(ChessGameService)","u":"%3Cinit%3E(com.chess.backend.services.ChessGameService)"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveRight","l":"MoveRight()","u":"%3Cinit%3E()"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveTwoBackward","l":"MoveTwoBackward()","u":"%3Cinit%3E()"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveTwoForward","l":"MoveTwoForward()","u":"%3Cinit%3E()"},{"p":"com.chess.backend.gamemodel.constants","c":"Event","l":"NEW_MOVE"},{"p":"com.chess.backend.gamemodel.constants","c":"Event","l":"NEW_PLAYER_JOIN"},{"p":"com.chess.backend.restController.service","c":"NewChessGameService","l":"NewChessGameService(ChessGameService, IGameRepository)","u":"%3Cinit%3E(com.chess.backend.services.ChessGameService,com.chess.backend.domain.repository.IGameRepository)"},{"p":"com.chess.backend.restController.controller","c":"NewGameController","l":"NewGameController(NewOnlineGameService, INewGameService)","u":"%3Cinit%3E(com.chess.backend.restController.service.NewOnlineGameService,com.chess.backend.domain.services.INewGameService)"},{"p":"com.chess.backend.restController.objects","c":"NewGameObject","l":"NewGameObject()","u":"%3Cinit%3E()"},{"p":"com.chess.backend.restController.service","c":"NewOnlineGameService","l":"NewOnlineGameService(ChessGameService, GameRepository)","u":"%3Cinit%3E(com.chess.backend.services.ChessGameService,com.chess.backend.repository.GameRepository)"},{"p":"com.chess.backend.restController.objects","c":"NewPlayerObject","l":"NewPlayerObject()","u":"%3Cinit%3E()"},{"p":"com.chess.backend.restController.objects","c":"NewPlayersObject","l":"NewPlayersObject()","u":"%3Cinit%3E()"},{"p":"com.chess.backend.gamemodel.constants","c":"Castling","l":"NONE"},{"p":"com.chess.backend.gamemodel.constants","c":"GameMode","l":"OFFLINE"},{"p":"com.chess.backend.gamemodel.constants","c":"GameMode","l":"ONLINE"},{"p":"com.chess.backend.gamemodel.constants","c":"PieceType","l":"PAWN"},{"p":"com.chess.backend.gamemodel","c":"Piece","l":"Piece(PieceType, Player, boolean)","u":"%3Cinit%3E(com.chess.backend.gamemodel.constants.PieceType,com.chess.backend.gamemodel.Player,boolean)"},{"p":"com.chess.backend.gamemodel.constants","c":"Event","l":"PLAYER_CHANGE"},{"p":"com.chess.backend.gamemodel","c":"Player","l":"Player()","u":"%3Cinit%3E()"},{"p":"com.chess.backend.gamemodel","c":"Player","l":"Player(String, Color)","u":"%3Cinit%3E(java.lang.String,com.chess.backend.gamemodel.constants.Color)"},{"p":"com.chess.backend.gamemodel","c":"Player","l":"Player(String, Color, Integer)","u":"%3Cinit%3E(java.lang.String,com.chess.backend.gamemodel.constants.Color,java.lang.Integer)"},{"p":"com.chess.backend.gamemodel","c":"Player","l":"Player(String, int)","u":"%3Cinit%3E(java.lang.String,int)"},{"p":"com.chess.backend.services","c":"PlayerService","l":"PlayerService()","u":"%3Cinit%3E()"},{"p":"com.chess.backend.gamemodel","c":"Position","l":"Position(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"com.chess.backend.gamemodel.constants","c":"Event","l":"PROMOTE"},{"p":"com.chess.backend.gamemodel.constants","c":"PieceType","l":"QUEEN"},{"p":"com.chess.backend.gamemodel.constants","c":"Color","l":"RED"},{"p":"com.chess.backend.services","c":"ChessboardService","l":"removeOtherPieceTypes(Chessboard, PieceType)","u":"removeOtherPieceTypes(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.constants.PieceType)"},{"p":"com.chess.backend.gamemodel","c":"Square","l":"removePiece()"},{"p":"com.chess.backend.services","c":"ChessboardService","l":"removePiece(int, int, ArrayList<ArrayList<Square>>)","u":"removePiece(int,int,java.util.ArrayList)"},{"p":"com.chess.backend.gamemodel","c":"Position.Direction","l":"RIGHT"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"MoveRight","l":"right(Chessboard, Piece, boolean, boolean, boolean, int)","u":"right(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Piece,boolean,boolean,boolean,int)"},{"p":"com.chess.backend.gamemodel","c":"Position","l":"right(IBoard)","u":"right(com.chess.backend.domain.models.IBoard)"},{"p":"com.chess.backend.gamemodel.constants","c":"PieceType","l":"ROOK"},{"p":"com.chess.backend.services","c":"ChessboardService","l":"searchSquaresByPiece(ArrayList<ArrayList<Square>>, PieceType, Color, Player)","u":"searchSquaresByPiece(java.util.ArrayList,com.chess.backend.gamemodel.constants.PieceType,com.chess.backend.gamemodel.constants.Color,com.chess.backend.gamemodel.Player)"},{"p":"com.chess.backend.services","c":"ChessGameService","l":"setActivePlayer(ChessGame, Player)","u":"setActivePlayer(com.chess.backend.gamemodel.ChessGame,com.chess.backend.gamemodel.Player)"},{"p":"com.chess.backend.domain.models","c":"IGame","l":"setActivePlayer(Player)","u":"setActivePlayer(com.chess.backend.gamemodel.Player)"},{"p":"com.chess.backend.domain.models","c":"IBoard","l":"setBreakCastling(boolean)"},{"p":"com.chess.backend.domain.models","c":"IGame","l":"setChessboard(Chessboard)","u":"setChessboard(com.chess.backend.gamemodel.Chessboard)"},{"p":"com.chess.backend.services","c":"ChessboardService","l":"setCommonPiecePlayer(Chessboard, PieceType, Player)","u":"setCommonPiecePlayer(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.constants.PieceType,com.chess.backend.gamemodel.Player)"},{"p":"com.chess.backend.restController.objects","c":"ExecutedMoveObject","l":"setGameID(int)"},{"p":"com.chess.backend.domain.models","c":"IGame","l":"setId(int)"},{"p":"com.chess.backend.domain.models","c":"IBoard","l":"setMoves_history(Moves)","u":"setMoves_history(com.chess.backend.gamemodel.Moves)"},{"p":"com.chess.backend.domain.models","c":"IGame","l":"setMoves(Moves)","u":"setMoves(com.chess.backend.gamemodel.Moves)"},{"p":"com.chess.backend.restController.objects","c":"ExecutedMoveObject","l":"setNewPiecePosition(int[])"},{"p":"com.chess.backend.domain.models","c":"IBoard","l":"setNumberOfPlayers(int)"},{"p":"com.chess.backend.services","c":"ChessboardService","l":"setPiece(int, int, ArrayList<ArrayList<Square>>, Piece)","u":"setPiece(int,int,java.util.ArrayList,com.chess.backend.gamemodel.Piece)"},{"p":"com.chess.backend.gamemodel","c":"Square","l":"setPiece(Piece)","u":"setPiece(com.chess.backend.gamemodel.Piece)"},{"p":"com.chess.backend.domain.models","c":"IGame","l":"setPlayers(List<Player>)","u":"setPlayers(java.util.List)"},{"p":"com.chess.backend.domain.controllers.objects","c":"INewPlayersObject","l":"setPlayers(NewPlayerObject[])","u":"setPlayers(com.chess.backend.restController.objects.NewPlayerObject[])"},{"p":"com.chess.backend.restController.objects","c":"ExecutedMoveObject","l":"setPreviousPiecePosition(int[])"},{"p":"com.chess.backend.domain.models","c":"IBoard","l":"setSquares(ArrayList<ArrayList<Square>>)","u":"setSquares(java.util.ArrayList)"},{"p":"com.chess.backend.gamemodel.abstractmoves","c":"Shoot","l":"shoot(Chessboard, Piece, boolean, boolean, boolean, int)","u":"shoot(com.chess.backend.gamemodel.Chessboard,com.chess.backend.gamemodel.Piece,boolean,boolean,boolean,int)"},{"p":"com.chess.backend.gamemodel.constants","c":"Castling","l":"SHORT_CASTLING"},{"p":"com.chess.backend.gamemodel","c":"Square","l":"Square(int, int, Piece)","u":"%3Cinit%3E(int,int,com.chess.backend.gamemodel.Piece)"},{"p":"com.chess.backend.restController.objects","c":"SquareObject","l":"SquareObject(String, int, String)","u":"%3Cinit%3E(java.lang.String,int,java.lang.String)"},{"p":"com.chess.backend.services","c":"ChessGameService","l":"switchActive(ChessGame)","u":"switchActive(com.chess.backend.gamemodel.ChessGame)"},{"p":"com.chess.backend.domain.models","c":"IBoard","l":"toString()"},{"p":"com.chess.backend.gamemodel.constants","c":"GameMode","l":"toString()"},{"p":"com.chess.backend.gamemodel","c":"Move","l":"toString()"},{"p":"com.chess.backend.gamemodel","c":"Piece","l":"toString()"},{"p":"com.chess.backend.gamemodel","c":"Position","l":"toString()"},{"p":"com.chess.backend.gamemodel","c":"Square","l":"toString()"},{"p":"com.chess.backend.domain.repository","c":"IGameRepository","l":"updateGame(Integer, ChessGame)","u":"updateGame(java.lang.Integer,com.chess.backend.gamemodel.ChessGame)"},{"p":"com.chess.backend.repository","c":"GameRepository","l":"updateGame(Integer, ChessGame)","u":"updateGame(java.lang.Integer,com.chess.backend.gamemodel.ChessGame)"},{"p":"com.chess.backend.repository","c":"GameRepositoryMock","l":"updateGame(Integer, ChessGame)","u":"updateGame(java.lang.Integer,com.chess.backend.gamemodel.ChessGame)"},{"p":"com.chess.backend.domain.repository","c":"IGameRepository","l":"updateGame(Integer, ChessGame, List<EventObject>)","u":"updateGame(java.lang.Integer,com.chess.backend.gamemodel.ChessGame,java.util.List)"},{"p":"com.chess.backend.repository","c":"GameRepository","l":"updateGame(Integer, ChessGame, List<EventObject>)","u":"updateGame(java.lang.Integer,com.chess.backend.gamemodel.ChessGame,java.util.List)"},{"p":"com.chess.backend.repository","c":"GameRepositoryMock","l":"updateGame(Integer, ChessGame, List<EventObject>)","u":"updateGame(java.lang.Integer,com.chess.backend.gamemodel.ChessGame,java.util.List)"},{"p":"com.chess.backend.services","c":"ChessGameService","l":"validateMove(int, int[], int[])","u":"validateMove(int,int[],int[])"},{"p":"com.chess.backend.gamemodel.constants","c":"Castling","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.chess.backend.gamemodel.constants","c":"Color","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.chess.backend.gamemodel.constants","c":"Event","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.chess.backend.gamemodel.constants","c":"GameMode","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.chess.backend.gamemodel.constants","c":"PieceType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.chess.backend.gamemodel","c":"Position.Direction","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.chess.backend.gamemodel.constants","c":"Castling","l":"values()"},{"p":"com.chess.backend.gamemodel.constants","c":"Color","l":"values()"},{"p":"com.chess.backend.gamemodel.constants","c":"Event","l":"values()"},{"p":"com.chess.backend.gamemodel.constants","c":"GameMode","l":"values()"},{"p":"com.chess.backend.gamemodel.constants","c":"PieceType","l":"values()"},{"p":"com.chess.backend.gamemodel","c":"Position.Direction","l":"values()"},{"p":"com.chess.backend.gamemodel.constants","c":"PieceType","l":"WAZIR"},{"p":"com.chess.backend.gamemodel.constants","c":"Color","l":"WHITE"}];updateSearchResults();